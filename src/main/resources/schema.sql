CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(40) NOT NULL,
    login varchar(40) NOT NULL,
    name varchar(40),
    birthday date,
    CONSTRAINT constr_user_data CHECK (email <> '' AND login <> '')
);

CREATE TABLE IF NOT EXISTS friendships (
    user1_id BIGINT NOT NULL REFERENCES users (id)
    ON DELETE CASCADE,
    user2_id BIGINT NOT NULL REFERENCES users (id)
    ON DELETE CASCADE,
    CONSTRAINT friendship_unique UNIQUE (user1_id , user2_id)

);

CREATE TABLE IF NOT EXISTS mpa (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40) NOT NULL,
    description varchar(200) NOT NULL,
    release_date date,
    duration BIGINT,
    mpa_id BIGINT REFERENCES mpa (id)
    ON DELETE CASCADE,
    CONSTRAINT constr_films_data CHECK (name <> '' AND release_date > '1895-12-28' AND duration > 0)
);


CREATE TABLE IF NOT EXISTS genres (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS genres_film (
    film_id BIGINT NOT NULL REFERENCES films (id)
    ON DELETE CASCADE,
    genre_id BIGINT NOT NULL REFERENCES genres (id)
    ON DELETE CASCADE,
    CONSTRAINT film_genres_unique UNIQUE (film_id , genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
    film_id BIGINT NOT NULL REFERENCES films (id)
    ON DELETE CASCADE,
    user_id BIGINT NOT NULL REFERENCES users (id)
    ON DELETE CASCADE,
    CONSTRAINT like_unique UNIQUE (film_id , user_id)
);